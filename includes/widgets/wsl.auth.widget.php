<?php
/*!
* WordPress Social Login
*
* http://hybridauth.sourceforge.net/wsl/index.html | http://github.com/hybridauth/WordPress-Social-Login
*    (c) 2011-2014 Mohamed Mrassi and contributors | http://wordpress.org/extend/plugins/wordpress-social-login/
*/

/**
* Authentication widgets generator
*/

// Exit if accessed directly
if ( !defined( 'ABSPATH' ) ) exit;

// --------------------------------------------------------------------
/**
*
*
* http://hybridauth.sourceforge.net/wsl/themes.html
* http://hybridauth.sourceforge.net/wsl/hooks.html
*/
function wsl_render_login_form()
{
	if ( is_user_logged_in() && ! is_admin() ){
		// HOOKABLE:
		do_action( 'wsl_render_login_form_user_loggedin' );

		return;
	}

	// Bouncer :: Allow authentication 
	if( get_option( 'wsl_settings_bouncer_authentication_enabled' ) == 2 ){
		return;
	}

	# https://github.com/hybridauth/WordPress-Social-Login/pull/35
	// This allows for output redirection or a kind of "echo=off" feature similar to wp_login_form.
	// All output to stdout by 'wsl_render_login_form' is captured and returned by the function.
	// After buffer is returned, it can be output at the correct time / position of function instantiation.
	ob_start();

	// HOOKABLE: This action runs just before generating the WSL Widget.
	do_action( 'wsl_render_login_form_start' );

	GLOBAL $WORDPRESS_SOCIAL_LOGIN_PROVIDERS_CONFIG;

	// Icon set. If eq 'none', we show text instead
	$social_icon_set = get_option( 'wsl_settings_social_icon_set' );

	// wpzoom icons set, is shown by default
	if( empty( $social_icon_set ) ){
		$social_icon_set = "wpzoom/";
	}

	$assets_base_url  = WORDPRESS_SOCIAL_LOGIN_PLUGIN_URL . '/assets/img/32x32/' . $social_icon_set . '/'; 

	// HOOKABLE: allow use of other icon sets
	$assets_base_url = apply_filters( 'wsl_hook_alter_assets_base_url', $assets_base_url );

	// get the current page url, which we will use to redirect the user to,
	// unless Widget::Force redirection is set to 'yes', then this will be ignored and Widget::Redirect URL will be used instead
	$current_page_url = wsl_get_current_url();

	// build the authentication url which will call for wsl_process_login() : action=wordpress_social_authenticate
	$authenticate_base_url = site_url( 'wp-login.php', 'login_post' ) . ( strpos( site_url( 'wp-login.php', 'login_post' ), '?' ) ? '&' : '?' ) . "action=wordpress_social_authenticate&";
?>

<!--
	wsl_render_login_form
	WordPress Social Login Plugin <?php echo wsl_get_version(); ?>.
	http://wordpress.org/extend/plugins/wordpress-social-login/
-->

	<!-- 
		! Notes:
		! Since WSL 2.1.7, all elements IDs generated by the widget are replaced by css classes : 
		!    #wp-social-login-connect-with replaced with .wp-social-login-connect-with 
		!    #wp-social-login-connect-options replaced with .wp-social-login-provider-list
		! Class .wsl_connect_with_provider will be replaced with .wp-social-login-provider and .wp-social-login-provider-{provider}
		! Those depreciated selectors are kept for backward compatibility and will be removed.
	-->
<?php 
	// Widget::Custom CSS
	$wsl_settings_authentication_widget_css = get_option( 'wsl_settings_authentication_widget_css' );

	// show the custom widget css if not empty
	if( ! empty( $wsl_settings_authentication_widget_css ) ){
?> 
<style>
	<?php
		echo
			preg_replace(
				array( '%/\*(?:(?!\*/).)*\*/%s', '/\s{2,}/', "/\s*([;{}])[\r\n\t\s]/", '/\\s*;\\s*/', '/\\s*{\\s*/', '/;?\\s*}\\s*/' ),
					array( '', ' ', '$1', ';', '{', '}' ),
						$wsl_settings_authentication_widget_css );
	?> 
</style>
<?php 
	}
?>

<div class="wp-social-login-widget">

	<div id="wp-social-login-connect-with" class="wp-social-login-connect-with"><?php _wsl_e( get_option( 'wsl_settings_connect_with_label' ), 'wordpress-social-login'); ?></div>

	<div id="wp-social-login-connect-options" class="wp-social-login-provider-list">
<?php 
	// Widget::Authentication display
	$wsl_settings_use_popup = get_option( 'wsl_settings_use_popup' );

	$nok = true;

	// display provider icons
	foreach( $WORDPRESS_SOCIAL_LOGIN_PROVIDERS_CONFIG AS $item ){
		$provider_id   = isset( $item["provider_id"]   ) ? $item["provider_id"]   : '' ;
		$provider_name = isset( $item["provider_name"] ) ? $item["provider_name"] : '' ;

		// build authentication url
		$authenticate_url = $authenticate_base_url . "provider=" . $provider_id . "&redirect_to=" . urlencode( $current_page_url );

		// http://codex.wordpress.org/Function_Reference/esc_url
		$authenticate_url = esc_url( $authenticate_url );

		if( get_option( 'wsl_settings_' . $provider_id . '_enabled' ) ){ 
			// in case, Widget::Authentication display is set to 'popup', then we overwrite 'authenticate_url'
			// > /assets/js/connect.js will take care of the rest
			if( $wsl_settings_use_popup == 1 ){ 
				$authenticate_url= "javascript:void(0);";
			}

			// HOOKABLE: allow use of other icon sets
			$provider_icon_markup = apply_filters( 'wsl_render_login_form_alter_provider_icon_markup', $provider_id, $provider_name, $authenticate_url );

			if( $provider_icon_markup != $provider_id ){
				echo $provider_icon_markup;
			}
			else{
?>

		<a rel="nofollow" href="<?php echo $authenticate_url; ?>" title="<?php echo sprintf( _wsl__("Connect with %s", 'wordpress-social-login'), $provider_name ) ?>" class="wsl_connect_with_provider wp-social-login-provider wp-social-login-provider-<?php echo strtolower( $provider_id ); ?>" data-provider="<?php echo $provider_id ?>"> 
			<?php if( $social_icon_set == 'none' ){ echo $provider_name; } else { ?><img alt="<?php echo $provider_name ?>" title="<?php echo sprintf( _wsl__("Connect with %s", 'wordpress-social-login'), $provider_name ) ?>" src="<?php echo $assets_base_url . strtolower( $provider_id ) . '.png' ?>" /><?php } ?>	
		</a>

<?php 
			}

			$nok = false; 
		} 
	} 

	// not provider enabled?
	if( $nok ){
?>
		<p style="background-color: #FFFFE0;border:1px solid #E6DB55;padding:5px;">
			<?php _wsl_e( '<strong style="color:red;">WordPress Social Login is not configured yet!</strong><br />Please visit the <strong>Settings\ WP Social Login</strong> administration page to configure this plugin.<br />For more information please refer to the plugin <a href="http://hybridauth.sourceforge.net/userguide/Plugin_WordPress_Social_Login.html">online user guide</a> or contact us at <a href="http://hybridauth.sourceforge.net/">hybridauth.sourceforge.net</a>' , 'wordpress-social-login') ?> 
		</p>
		<style>#wp-social-login-connect-with{display:none;}</style>
<?php
	}

	// provide popup url for hybridauth callback
	if( $wsl_settings_use_popup == 1 ){
	?>

		<input id="wsl_popup_base_url" type="hidden" value="<?php echo esc_url( $authenticate_base_url ) ?>" />
		<input type="hidden" id="wsl_login_form_uri" value="<?php echo esc_url( site_url( 'wp-login.php', 'login_post' ) ); ?>" />

	<?php
	} 
?>
	</div> 

	<div class="wp-social-login-widget-clearing"></div>
</div> 

<!-- wsl_render_login_form -->

<?php
	// HOOKABLE: This action runs just after generating the WSL Widget.
	do_action( 'wsl_render_login_form_end' );

	// Display WSL debugging are bellow the widget.  
	// wsl_display_dev_mode_debugging_area(); // ! keep this line commented unless you know what you are doing :) 

	# https://github.com/hybridauth/WordPress-Social-Login/pull/35
	// All output to stdout by 'wsl_render_login_form' has finished.
	// Close and return buffer via PHP - Output Control function.
	// This stops the output from being dumped to document immediately at function runtime,
	// which is often at the top of a page or post instead of at the correct position where a shortcode is placed. 
	return ob_get_clean();
}

// --------------------------------------------------------------------

# {{{ render widget

function wsl_render_login_form_login()
{
	# https://github.com/hybridauth/WordPress-Social-Login/pull/35
	// Captured stdout buffer from 'wsl_render_login_form' is returned on instantiation.
	// It is now output to screen satisfying appropriate behaviour for 'do_action()' calls.
	// Since output is returned, other registrations (such as shortcodes) can display returned
	// output at the correct time and position in the document for when the shortcode is triggered.
	echo wsl_render_login_form();
}

add_action( 'wordpress_social_login', 'wsl_render_login_form_login' );

// --------------------------------------------------------------------

/**
* Display on comment area
*/
function wsl_render_wsl_widget_in_comment_form()
{
	$wsl_settings_widget_display = get_option( 'wsl_settings_widget_display' );

	if( comments_open() ) {
		if( 
				!  $wsl_settings_widget_display
			|| 
				$wsl_settings_widget_display == 1 
			|| 
				$wsl_settings_widget_display == 2 
		){
			echo wsl_render_login_form();
		}
	}
}

add_action( 'comment_form_top', 'wsl_render_wsl_widget_in_comment_form' );

// --------------------------------------------------------------------

/**
* Display on login form
*/
function wsl_render_wsl_widget_in_wp_login_form()
{
	$wsl_settings_widget_display = get_option( 'wsl_settings_widget_display' );
	
	if( $wsl_settings_widget_display == 1 || $wsl_settings_widget_display == 3 ){
		echo wsl_render_login_form();
	} 
}

add_action( 'login_form'                      , 'wsl_render_wsl_widget_in_wp_login_form' );
add_action( 'bp_before_account_details_fields', 'wsl_render_wsl_widget_in_wp_login_form' ); 
add_action( 'bp_before_sidebar_login_form'    , 'wsl_render_wsl_widget_in_wp_login_form' );

// --------------------------------------------------------------------

/**
* Display on login & register form
*/
function wsl_render_wsl_widget_in_wp_register_form()
{
	$wsl_settings_widget_display = get_option( 'wsl_settings_widget_display' );

	if( $wsl_settings_widget_display == 1 || $wsl_settings_widget_display == 3 ){
		echo wsl_render_login_form();
	} 
}

add_action( 'register_form'    , 'wsl_render_wsl_widget_in_wp_register_form' );
add_action( 'after_signup_form', 'wsl_render_wsl_widget_in_wp_register_form' );

# }}}

// --------------------------------------------------------------------

# {{{ shortcode, js and css injectors
function wsl_shortcode_handler($args)
{
	echo wsl_render_login_form();
}

add_shortcode ( 'wordpress_social_login', 'wsl_shortcode_handler' );

// --------------------------------------------------------------------

function wsl_add_javascripts()
{
	if( get_option( 'wsl_settings_use_popup' ) != 1 ){
		return null;
	}

	if( ! wp_script_is( 'wsl_js', 'registered' ) ) {
		wp_register_script( "wsl_js", WORDPRESS_SOCIAL_LOGIN_PLUGIN_URL . "/assets/js/connect.js" );
	}

	# https://github.com/hybridauth/WordPress-Social-Login/pull/36
	wp_enqueue_script( "jquery" );
	wp_enqueue_script( "wsl_js" );
}

add_action( 'login_head', 'wsl_add_javascripts' );
add_action( 'wp_head', 'wsl_add_javascripts' );

// --------------------------------------------------------------------

function wsl_add_stylesheets()
{
	if( ! wp_style_is( 'wsl_css', 'registered' ) ) {
		wp_register_style( "wsl_css", WORDPRESS_SOCIAL_LOGIN_PLUGIN_URL . "/assets/css/style.css" ); 
	}

	# https://github.com/hybridauth/WordPress-Social-Login/pull/36
	wp_enqueue_style( "wsl_css" ); 
}

add_action( 'login_head', 'wsl_add_stylesheets' );
add_action( 'wp_head', 'wsl_add_stylesheets' );
# }}}

// --------------------------------------------------------------------

# {{{ linking new accounts 

// render a new widget on wp-admin/profile.php to permit linking profiles 
// only one linked account per provider is permitted!!
function wsl_render_login_form_admin_head_user_profile_generate_html()
{ 
	if ( ! is_user_logged_in() ){
		return;
	}

	# if ob_start()/ob_end_clean() dont work for you then i can do nothing for you
	ob_start();

	global $current_user;
	global $WORDPRESS_SOCIAL_LOGIN_PROVIDERS_CONFIG;

	get_currentuserinfo();

	$user_id = $current_user->ID;

	$linked_accounts = wsl_get_stored_hybridauth_user_profiles_by_user_id( $user_id );

	// if not WSL user, then nothing to show, yet
	if( ! $linked_accounts ){
		return;
	}

	$social_icon_set = get_option( 'wsl_settings_social_icon_set' );

	if( empty( $social_icon_set ) ){
		$social_icon_set = "wpzoom/";
	}
	else{
		$social_icon_set .= "/";
	}

	$assets_base_url  = WORDPRESS_SOCIAL_LOGIN_PLUGIN_URL . '/assets/img/32x32/' . $social_icon_set; 
?> 
<h3><?php _wsl_e("Social networks", 'wordpress-social-login') ?></h3> 
<table class="form-table">  
	<tr>  
		<td valign="top">
			<table id="wsl-user-profile-injected-table-b">
				<tr>
					<th width="80"><?php _wsl_e("Provider", 'wordpress-social-login') ?></th>
					<th><?php _wsl_e("Identity", 'wordpress-social-login') ?></th> 
				</tr>
				<?php
					foreach( $linked_accounts AS $item ){  
						$identity = $item->profileurl;
						$photourl = $item->photourl;
						
						if( ! $identity ){
							$identity = $item->identifier;
						}
				?>
					<tr>
						<td>
							<?php if( $photourl ) { ?>
								<img src="<?php echo $photourl ?>" style="vertical-align: top;width:16px;height:16px;" > 
							<?php } else { ?>
								<img src="<?php echo $assets_base_url . strtolower(  $item->provider ) . '.png' ?>" style="vertical-align: top;width:16px;height:16px;" />
							<?php } ?> 
							<?php echo ucfirst( $item->provider ); ?>
						</td>
						<td><?php echo $identity; ?></td> 
					</tr>
				<?php 
					}
				?>
			</table>
		</td> 
	</tr>
</table>
<?php
	$html = ob_get_contents();

	ob_end_clean();

	return addslashes( preg_replace('/\s+/',' ', $html ) );
}

function wsl_render_login_form_admin_head_user_profile()
{
?> 
	<style> 
		#wsl-user-profile-injected-table-b
		{
			font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif;
			font-size: 12px;
			background: #fff; 
			border-collapse: collapse;
			text-align: left;
		}
		#wsl-user-profile-injected-table-b th
		{
			font-size: 14px;
			font-weight: normal; 
			padding: 10px 8px;
			border-bottom: 2px solid #ccc;
			width: auto;
		}
		#wsl-user-profile-injected-table-b td
		{
			border-bottom: 1px solid #ccc; 
			padding: 6px 8px;
			width: auto;
		}
		#wsl-user-profile-injected-table-b tbody tr:hover td
		{
			color: #009;
		} 
	</style>
	<script>
		jQuery(document).ready(function($)
		{     
			jQuery( '#user_login' )
				.parent()
					.parent()
						.parent()
					.parent()
				.after( '<?php echo wsl_render_login_form_admin_head_user_profile_generate_html() ?>' );
		});
	</script>
<?php
}

add_action( 'admin_head-profile.php', 'wsl_render_login_form_admin_head_user_profile' );  

# }}} linking new accounts

// --------------------------------------------------------------------
